name: Hyperledger Fabric CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker Compose
        uses: docker/compose-action@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            curl \
            gnupg2 \
            lsb-release \
            ca-certificates \
            software-properties-common
          
          # Install Docker and Docker Compose (if not already installed)
          curl -fsSL https://get.docker.com | sudo bash
          sudo usermod -aG docker $USER
          sudo apt-get install -y docker-compose
          
          # Install Hyperledger Fabric binaries
          curl -sSL https://github.com/hyperledger/fabric/releases/download/v2.3.0/fabric-tools-2.3.0-linux-amd64.tar.gz | tar -xz -C /usr/local/bin

  test:
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up environment
        run: |
          export FABRIC_CFG_PATH=${PWD}/configtx
          export CONTAINER_CLI="docker"
          export COMPOSE_FILE_BASE="docker-compose-test-net.yaml"
          
          # Ensure Docker Compose is available
          docker-compose --version
          
      - name: Start Hyperledger Fabric Network
        run: |
          ./network.sh up

      - name: Run Fabric Tests
        run: |
          # Add your test commands here (e.g., checking logs, running chaincode, etc.)
          echo "Run your Fabric tests here"

      - name: Tear down network
        run: |
          ./network.sh down

  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cleanup Docker Containers
        run: |
          docker system prune -f
          docker volume prune -f
