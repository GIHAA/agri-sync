name: Hyperledger Service - Test

on:
  pull_request:
    branches: [develop]
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Initialize Submodules (if fabric-samples is a submodule)
      - name: Initialize Submodules
        run: git submodule update --init --recursive

      # Step 3: Debug Directory Structure
      - name: Debug Directory Structure
        run: |
          echo "Listing root directory..."
          ls -R

      # Step 4: Clone Fabric Samples (if directory is missing)
      - name: Clone Fabric Samples (Optional)
        if: !exists('fabric-samples/asset-transfer-basic/rest-api-typescript')
        run: git clone https://github.com/hyperledger/fabric-samples.git

      # Step 5: Install Dependencies
      - name: Install Dependencies
        working-directory: fabric-samples/asset-transfer-basic/rest-api-typescript
        run: |
          npm install
          npm install -g mocha chai hyperledger/fabric-sdk-node
          npx prettier --write src/server.ts

      # Step 6: Generate Environment Variables
      - name: Generate Environment Variables
        working-directory: fabric-samples/asset-transfer-basic/rest-api-typescript
        run: |
          chmod +x ./scripts/generateEnv.sh
          npm run generateEnv

      # Step 7: Set Up Hyperledger Fabric Network
      - name: Set Up Hyperledger Fabric Network
        working-directory: fabric-samples/test-network
        run: |
          chmod +x organizations/ccp-generate.sh
          ./network.sh up createChannel -c seedtransectionchannel -ca
          ./network.sh deployCC -ccn basic -ccp ../asset-transfer-basic/chaincode-typescript/ -ccl typescript
          ./organizations/ccp-generate.sh

      # Step 8: Run Hyperledger Tests
      - name: Run Hyperledger Tests
        working-directory: fabric-samples/asset-transfer-basic/rest-api-typescript
        run: |
          mocha tests --recursive > test-results.txt 2>&1

      # Step 9: Process Test Results
      - name: Process Test Results
        id: test-results
        run: |
          if grep -q "passing" fabric-samples/asset-transfer-basic/rest-api-typescript/test-results.txt; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "tests_passed=true" >> $GITHUB_OUTPUT
            echo "total_tests=$(grep -o "passing" fabric-samples/asset-transfer-basic/rest-api-typescript/test-results.txt | wc -l)" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "tests_passed=false" >> $GITHUB_OUTPUT
          fi
